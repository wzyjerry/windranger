{{- /* gotype: dev.aminer.cn/gopkg/windranger/internal/generator/proto.InfoProto */ -}}
{{- /* 设置文件头 */ -}}
// Code generated by windranger, DO NOT EDIT.
package {{ .PackageName }}
{{- /* 处理导入 */ -}}
{{ if .Imports }}

import (
{{- range .Imports }}
    "{{ . }}"
{{- end }}
)
{{- end }}
{{- /* 生成枚举类型 */}}
{{ range $enum := .Enums }}
{{- if $enum.Comment}}
// {{ protoPascal $enum.Name }} {{ $enum.Comment }}
type {{ protoPascal $enum.Name }} int
{{- end }}
const (
{{- range $i, $enumField := $enum.EnumFields }}
{{- if $enumField.Comment}}
    // {{ $enumField.Name }} {{ $enumField.Comment }}
{{- end }}
{{- if eq $i 0 }}
    {{ $enumField.Name }} {{ protoPascal $enum.Name }} = iota
{{- else }}
    {{ $enumField.Name }}
{{- end}}
{{- end }}
)
{{ end }}
{{- /* 生成结构 */ -}}
{{ range $structure := .Structures }}
{{- if $structure.Comment}}
// {{ protoPascal $structure.Name }} {{ $structure.Comment }}
{{- end }}
type {{ protoPascal $structure.Name }} struct {
{{- range $i, $field := $structure.Fields }}
{{- if $field.Comment}}
    // {{ protoPascal $field.Name }} {{ $field.Comment }}
{{- end }}
    {{ protoPascal $field.Name -}}
    {{- if (eq $field.Type.Kind 1) }}
        {{- " []" }}
    {{- else if (eq $field.Type.Kind 2) }}
        {{- " *" }}
    {{- else }}
        {{- " " }}
    {{- end }}
    {{- if $field.Type.Package }}
        {{- $field.Type.Package }}.
    {{- end }}
    {{- $field.Type.Name }}
{{- end }}
}
{{ end }}